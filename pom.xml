<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.opentestsystem.delivery</groupId>
    <artifactId>tds-content-service</artifactId>
    <version>1.0.2-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>tds-content-service</name>
    <description>TDS Content Service</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <docker.image.prefix>smarterbalanced</docker.image.prefix>
        <assertj.version>3.4.1</assertj.version>
        <mockito.version>1.10.19</mockito.version>
        <tds-common.version>3.1.1.RELEASE</tds-common.version>
        <item-renderer.version>4.0.4</item-renderer.version>
        <item-scoring.version>4.0.1</item-scoring.version>
        <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
    </properties>

    <scm>
        <connection>scm:git:https://github.com/SmarterApp/TDS_ContentService.git</connection>
        <developerConnection>scm:git:git://github.com/SmarterApp/TDS_ContentService.git</developerConnection>
        <url>https://github.com/SmarterApp/TDS_ContentService</url>
        <tag>HEAD</tag>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- AWS -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.11.103</version>
        </dependency>

        <!-- TDS Dependencies -->
        <dependency>
            <groupId>org.opentestsystem.delivery</groupId>
            <artifactId>tds-common</artifactId>
            <version>${tds-common.version}</version>
        </dependency>

        <dependency>
            <groupId>org.opentestsystem.delivery</groupId>
            <artifactId>item-renderer</artifactId>
            <version>${item-renderer.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-mock</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>el-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.opentestsystem.delivery</groupId>
            <artifactId>item-scoring-engine</artifactId>
            <version>${item-scoring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.activemq</groupId>
                    <artifactId>activemq-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.cassandra</groupId>
                    <artifactId>cassandra-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>io.github.benas</groupId>
            <artifactId>random-beans</artifactId>
            <version>3.5.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven.release.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.10</version>
                <configuration>
                    <imageName>fwsbac/${project.artifactId}</imageName>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>

                        <!-- TDS_Student requires file-system test definitions.  The resource directories below must
                            be defined in the build machine's local file-system at the specified paths
                            to be embedded into the student docker container image.
                            Modify as required.-->
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.basedir}/src/main/resources/bank</directory>
                            <include>**/*</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>central</id>
            <name>airdev-releases</name>
            <url>https://airdev.jfrog.io/airdev/libs-releases-local</url>
        </repository>
    </distributionManagement>
</project>
